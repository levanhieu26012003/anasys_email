from fastapi import FastAPI, Request
import uvicorn
import google.generativeai as genai
import requests

app = FastAPI()

genai.configure(api_key="AIzaSyCQ8goTqlpw_H39rLbiM1tyCvIZjeo-Xr4")
model = genai.GenerativeModel('gemini-2.0-flash')



def generate_reply(email_content):
    prompt = f"""
        B·∫°n l√† tr·ª£ l√Ω CSKH. Vi·∫øt m·ªôt ph·∫£n h·ªìi l·ªãch s·ª± v√† chuy√™n nghi·ªáp cho email sau, b·∫±ng ng√¥n ng·ªØ HTML. 

        Ch·ªâ xu·∫•t n·ªôi dung HTML, kh√¥ng bao quanh b·∫±ng d·∫•u ```html``` ho·∫∑c b·∫•t k·ª≥ k√Ω hi·ªáu markdown n√†o. Kh√¥ng th√™m ph·∫ßn gi·∫£i th√≠ch.

        Email:
        \"\"\"
        {email_content}
        \"\"\"

        Ph·∫£n h·ªìi (HTML):      
        """
    response = model.generate_content(prompt)
    return response.text
@app.post("/ai-agent")
async def receive_from_n8n(req: Request):
    data = await req.json()
    print("üì© emai nh·∫≠n t·ª´ n8n: ", data)
    
    original_text = data.get("text", "")
    from_email = data.get("from","")
    subject = data.get("subject", "Re: Ph·∫£n h·ªìi t·ª´ h·ªá th√¥ng AI")
    
    ai_reply_origin = generate_reply(original_text)
    
    ai_reply = ai_reply_origin[7:-3]
    print(ai_reply)
    send_to_n8n(from_email, subject, ai_reply)
    return {"status":"ok","reply": ai_reply}

def send_to_n8n(to_email, subject, content):
    payload = {
        "to": to_email,
        "subject":subject,
        "text": content
    }
    
    
    res = requests.post("http://localhost:5678/webhook/send-reply", json=payload)
    print("ƒê√£ ph·∫£n h·ªìi ƒë·∫øn n8n:", res.status_code)

if __name__ == "__main__":
    uvicorn.run(app, host="0.0.0.0", port=8000)